plugins {
	id 'java-library'
	id 'eclipse'
}

defaultTasks 'clean', 'build', 'publishToMavenLocal'

ext.getGitHash = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

// We embed the git hash into jar files, and also use it for the plugin version of snapshot builds.
ext.buildVersion = version + '+' + getGitHash()
ext.isSnapshot = version.contains('-SNAPSHOT')
ext.pluginVersion = isSnapshot ? buildVersion : version

println 'Project version: ' + version
println 'Build version: ' + buildVersion
println 'Plugin version: ' + pluginVersion

repositories {
	mavenLocal()
	mavenCentral()

	// Bukkit/Spigot API
	maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
	// Shopkeepers API
	maven { url 'https://nexus.lichtspiele.org/repository/releases/' }
}

dependencies {
	compileOnly 'org.bukkit:bukkit:1.19.4-R0.1-SNAPSHOT'
	compileOnly 'com.nisovin.shopkeepers:ShopkeepersAPI:2.16.5'

	testImplementation 'org.bukkit:bukkit:1.19.4-R0.1-SNAPSHOT'
	testImplementation 'junit:junit:4.13.1'
}

java
{
	sourceCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
	options.encoding = 'utf8'
}

processResources {
	inputs.property 'pluginVersion', pluginVersion
	inputs.property 'dboUrl', dboUrl
	inputs.property 'description', description

	from project.sourceSets.main.resources.srcDirs

	filesMatching('plugin.yml') {
		expand([
			'pluginVersion': pluginVersion,
			'dboUrl': dboUrl,
			'description': description
		])
	}

	// TODO Some plugins might add resource directories twice.
	// See https://github.com/gradle/gradle/issues/17236
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
	manifest {
		attributes 'Implementation-Title': "${project.group}:${project.name}",
					'Implementation-Version': project.buildVersion
		// Include versions of compile dependencies:
		attributes configurations.compileClasspath.resolvedConfiguration.firstLevelModuleDependencies
			.collectEntries{[it.moduleName, it.moduleVersion]}
	}
}
